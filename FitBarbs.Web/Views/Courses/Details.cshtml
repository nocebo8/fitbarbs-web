@model FitBarbs.Web.Models.Course
@using FitBarbs.Web.Models

<h2>@Model.Title</h2>
<p>@Model.Description</p>
<p><span class="badge">@Model.Difficulty</span></p>

@if (User.IsInRole(ApplicationRoles.Instructor))
{
    <a class="btn-primary" href="@Url.Action("Create", "Lessons", new { courseId = Model.Id })">Dodaj lekcję</a>
}
else if (User.Identity?.IsAuthenticated ?? false)
{
    <form method="post" action="@Url.Action("Enroll", "Enrollments", new { courseId = Model.Id })" style="display:inline">
        <button class="btn-primary" type="submit">Zapisz się</button>
    </form>
}

<h4 class="mt-4">Lekcje</h4>
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">Wystąpiły błędy: @string.Join(", ", ViewData.ModelState.Values.SelectMany(v => v.Errors).Select(e => e.ErrorMessage))</div>
}
<ul class="list-none p-0 m-0">
    @foreach (var lesson in Model.Lessons.OrderBy(l => l.OrderIndex))
    {
        <li class="py-2 px-3 border-b border-[var(--fb-border)] flex items-center justify-between">
            <div>
                <strong>@lesson.OrderIndex. @lesson.Title</strong>
                <div class="text-muted">@lesson.Description</div>
            </div>
            <a class="btn-secondary" href="@Url.Action("Watch", "Lessons", new { id = lesson.Id })">Oglądaj</a>
        </li>
    }
    @if (!Model.Lessons.Any())
    {
        <li class="py-2 px-3">Brak lekcji w tym kursie.</li>
    }
}
</ul>


